#! /bin/sh
##
## ecmp_test --
##
##   Test script for ecmp executed in xcluster.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
me=$dir/$prg
tmp=/tmp/${prg}_$$

die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
help() {
	grep '^##' $0 | cut -c3-
	rm -rf $tmp
	exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$prg: $*" >&2
}
dbg() {
	test -n "$__verbose" && echo "$prg: $*" >&2
}

cmd_tcase_targets10() {
	cmd_tcase_targets 10
}

cmd_tcase_targets9() {
	cmd_tcase_targets 9
}
cmd_tcase_targets() {
	tcase "Set ecmp targets=$1"
	test -n "$1" || tdie "Missing param"
	local cmd4="ip ro replace 10.0.0.0/24"
	local cmd6="ip -6 ro replace 1000::/64"
	local i
	for i in $(seq 1 $1); do
		cmd4="$cmd4 nexthop via 192.168.1.$i"
		cmd6="$cmd6 nexthop via 1000::1:192.168.1.$i"
	done

	$cmd4 || tdie "Failed [$cmd4]"
	$cmd6 || tdie "Failed [$cmd6]"
}

cmd_tcase_external_mconnect() {
	tcase "Sending traffic from an external source"
	mkdir -p $tmp

	mconnect -address 10.0.0.2:5001 -nconn 100 -srccidr 222.222.222.0/24 \
		-output json > $tmp/mconnect4.json
	cat $tmp/mconnect4.json | jq .
	check_mconnect $tmp/mconnect4.json

	mconnect -address [1000::2]:5001 -nconn 100 -srccidr 5000::/112 \
		-output json > $tmp/mconnect6.json
	cat $tmp/mconnect6.json | jq .
	check_mconnect $tmp/mconnect6.json
}

check_mconnect() {
	local vm x
	for i in $(seq 1 10); do
		vm=$(printf "vm-%03d" $i)
		x=$(cat $1 | jq ".hosts.\"$vm\"")
		echo "$vm: $x"
		test $x -gt 2 -a $x -lt 20 || tdie "$vm: $x"
	done
}

cmd_tcase_start_ctraffic4() {
	tcase "Start ctraffic with ipv4"
	ctraffic -address 10.0.0.2:5003 -nconn 200 -rate 1000 \
		-timeout 7s -stats=all > /tmp/ctraffic4.json &
}

cmd_tcase_wait_for_ctraffic() {
	tcase "Waiting for ctraffic to terminate"
	local begin now
	begin=$(date +%s)
	while ps www | grep -v grep | grep -F 'ctraffic -address'; do
		now=$(date +%s)
		echo "Waiting ($((now-begin)))..."
		sleep 2
	done
	return 0
}

cmd_tcase_check_ctraffic4() {
	local failed=$(cat /tmp/ctraffic4.json | jq .FailedConnections)
	tcase "Checking ctraffic, FailedConnections=$failed"
	return 0
}


. /etc/profile
. /usr/lib/xctest
indent='  '


# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
	if echo $1 | grep -q =; then
		o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
		v=$(echo "$1" | cut -d= -f2-)
		eval "$o=\"$v\""
	else
		o=$(echo "$1" | sed -e 's,-,_,g')
		eval "$o=yes"
	fi
	shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
