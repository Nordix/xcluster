#! /bin/sh
##
## frr_test --
##
##   Perform FRR tests of the "xcluster" platform.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
tmp=/tmp/${prg}_$$

die() {
    echo "ERROR: $*" >&2
    rm -rf $tmp
    exit 1
}
help() {
    grep '^##' $0 | cut -c3-
    rm -rf $tmp
    exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$prg: $*" >&2
}
dbg() {
	test -n "$__verbose" && echo "$prg: $*" >&2
}

##  tcase_executables
cmd_tcase_executables() {
	tcase "Executables"
	local n f h
	for n in ldpd mtracebis ospf6d vtysh ripngd ripd babeld \
      isisd nhrpd zebra ospfd fabricd watchfrr eigrpd staticd ssd bfdd \
      bgpd pbrd pimd; do
		f=/usr/local/sbin/$n
		if ! test -x $f; then
			tlog "Not executable [$f]"
			continue
		fi
		h=-h
		test "$n" = "ssd" && h=--help
		if ! $f $h > /tmp/out 2>&1; then
			cat /tmp/out
			tdie "Failed to execute [$f -h]"
		fi
	done
}

##  tcase_gen_config
cmd_tcase_gen_config() {
	tcase "Generate configs"
	local d t f r
	export nodeid=$(hostname | cut -d- -f2 | sed -re 's,^0+,,')
	export HOST=$(hostname)
	r=vm
	test $nodeid -gt 200 && r=router
	test $nodeid -gt 220 && r=tester
	mkdir -p /etc/frr
	for f in $(find /etc/test -name "*.$r.template"); do
		d=$(basename $f | cut -d. -f1)
		envsubst < $f > /etc/frr/$d.conf
	done
}

. /etc/profile
. /usr/lib/xctest

# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 $hook || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
    if echo $1 | grep -q =; then
	o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
	v=$(echo "$1" | cut -d= -f2-)
	eval "$o=\"$v\""
    else
	o=$(echo "$1" | sed -e 's,-,_,g')
	eval "$o=yes"
    fi
    shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
