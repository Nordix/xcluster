#! /bin/sh

export PATH="/bin:/sbin:/usr/bin:/usr/sbin"
. /etc/profile

die() {
	echo "$@"
	exit 1
}

hostname | grep -Eq 'vm-[0-9]+$' || die "Invalid hostname [$(hostname)]"
i=$(hostname | cut -d- -f2 | sed -re 's,^0+,,')
test $i -le 200 || exit 0
test -n "$FIRST_WORKER" -a $i -lt "$FIRST_WORKER" && exit 0

config_private_reg() {
	local r
	cat >> $cfg <<EOF
version = 2
[plugins."io.containerd.grpc.v1.cri"]
  sandbox_image = "registry.k8s.io/pause:3.8"
EOF
	cat >> $cfg <<EOF
[plugins."io.containerd.grpc.v1.cri".registry]
  [plugins."io.containerd.grpc.v1.cri".registry.mirrors]
EOF
	for r in $(cat /etc/spoofed-hosts | cut -d' ' -f2); do
		cat >> $cfg <<EOF
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."$r"]
      endpoint = ["http://$r"]
EOF
	done	
	cat >> $cfg <<EOF
  [plugins."io.containerd.grpc.v1.cri".registry.configs]
EOF
	for r in $(cat /etc/spoofed-hosts | cut -d' ' -f2); do
		cat >> $cfg <<EOF
    [plugins."io.containerd.grpc.v1.cri".registry.configs."$r".tls]
      insecure_skip_verify = true
EOF
	done
}

crictl config --set runtime-endpoint=unix:///run/containerd/containerd.sock

cfg=/etc/containerd/config.toml
mkdir -p /etc/containerd
test -r /etc/spoofed-hosts && config_private_reg

containerd > /var/log/containerd.log 2>&1 &
sleep 0.2

cat > /etc/cri-plugin.rc <<EOF
# CRI options to "kubelet";
CRI_OPTS="--container-runtime-endpoint=unix:///run/containerd/containerd.sock --image-service-endpoint=unix:///run/containerd/containerd.sock $CRI_OPTS"
EOF
