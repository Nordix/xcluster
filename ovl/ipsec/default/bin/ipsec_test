#! /bin/sh
##
## sctp_test --
##
##   Test script for sctp executed in xcluster.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
me=$dir/$prg
tmp=/tmp/${prg}_$$
test -n "$DOMAIN" || DOMAIN=xcluster
test -n "$PREFIX" || PREFIX=1000::1
test -n "$FIRST_WORKER" || FIRST_WORKER=1
yamld=/etc/kubernetes/ipsec

die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
help() {
	grep '^##' $0 | cut -c3-
	rm -rf $tmp
	exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$prg: $*" >&2
}
dbg() {
	test -n "$__verbose" && echo "$prg: $*" >&2
}

cmd_tcase_check_namespaces() {
    test_namespaces $1
}

cmd_tcase_check_nodes() {
    test_nodes
}

cmd_tcase_deploy_ipsec_pods() {
	tcase "Deploy IPsec pods"
	apply_k8s $yamld
	test_deployment ipsec-responder 180
	assign-lb-ip -svc ipsec -ip 10.0.0.72,1000::72
}

cmd_tcase_initiate() {
	tcase "Initiate IKE"
	local cmd="/usr/local/sbin/swanctl --initiate --child host-host"
	local log="/var/log/ipsec-initiate.log"
	tlog $cmd
	nohup $cmd > $log 2>&1 &
}

cmd_tcase_initiator_list_sas() {
	tcase "Initiator list SAs"
	local cmd="/usr/local/sbin/swanctl --list-sas"
	tlog $cmd
	$cmd
}

cmd_tcase_responder_list_sas() {
	tcase "Initiator list SAs"
	local cmd="kubectl exec deploy/ipsec-responder -- /usr/local/sbin/swanctl --list-sas"
	tlog $cmd
	$cmd
}

cmd_tcase_vip_ecmp_route() {
	local net=1
	test -n "$1" && net=$1
	tcase "Setup VIP ECMP routes. net=$net"
	vip_route $net
}

cmd_tcase_vip_route() {
	tcase "Setup VIP route to [$1]"
	ip ro replace 10.0.0.0/24 via $1
	ip -6 ro replace 1000::/120 via $PREFIX:$1
	ip -6 ro replace $PREFIX:10.0.0.0/120 via $PREFIX:$1
}

cmd_tcase_start_tcpdump() {
	local dev=eth1
	test -n "$1" && dev=$1

	tcase "Start tcpdump on dev=$1"
	local pcap=/var/log/ipsec-$(hostname)-$1.pcap
	local cmd="tcpdump -i $dev udp port 500 or port 4500 -w $pcap"
	tlog $cmd
	nohup $cmd 2>&1 &
	# tcpdump takes a couple of seconds to start
	sleep 2
	tex "pgrep -P $$ tcpdump > /dev/null" || tdie
}

cmd_tcase_start_tcpdump_proc_ns() {
	local dev=eth0
	test -n "$1" || die "No process name given"
	local proc=$1
	tcase "Start tcpdump on dev=$dev for proc=$proc"

	for pid in $(pgrep $proc)
	do
		tcase "Start tcpdump on dev=$dev for pid=$pid"
		local pcap=/var/log/ipsec-$(hostname)-$dev-$pid.pcap
		local cmd="nsenter -t $pid -n tcpdump -- -i $dev sctp -w $pcap"
		tlog $cmd
		nohup $cmd 2>&1 &
		# tcpdump takes a couple of seconds to start
		sleep 2
		tex "pgrep -P $$ tcpdump > /dev/null" || tdie
	done
}

cmd_tcase_stop_all_tcpdump() {
	tcase "Stop all instances of tcpdump"
	local cmd="pkill tcpdump"
	tlog $cmd
	$cmd
	tex "! pgrep tcpdump" || tdie
}

. /etc/profile
. /usr/lib/xctest
indent='  '


# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
	if echo $1 | grep -q =; then
		o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
		v=$(echo "$1" | cut -d= -f2-)
		eval "$o=\"$v\""
	else
		o=$(echo "$1" | sed -e 's,-,_,g')
		eval "$o=yes"
	fi
	shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
