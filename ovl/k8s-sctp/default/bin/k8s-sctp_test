#! /bin/sh
##
## k8s-sctp_test --
##
##   Test script for <name> executed in xcluster.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
me=$dir/$prg
tmp=/tmp/${prg}_$$

die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
help() {
	grep '^##' $0 | cut -c3-
	rm -rf $tmp
	exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$prg: $*" >&2
}
dbg() {
	test -n "$__verbose" && echo "$prg: $*" >&2
}

cmd_tcase_check_namespaces() {
	test_namespaces
}
cmd_tcase_check_nodes() {
	test_nodes
}
cmd_tcase_check_coredns() {
	test_coredns
}
cmd_tcase_nslookup() {
	tcase "Nslookup $1"
	test -n "$1" || tdie "Nothing to lookup"
	pushv 40 20 2
	tex "nslookup $1" || tdie
	popv
}
cmd_tcase_start_ncat() {
	tcase "Start the ncat server in mode; $1"
	kubectl apply -f /etc/kubernetes/ncat-$1-sctp.yaml || tdie
}
cmd_tcase_check_ncat() {
	tcase "Check the ncat server"
	pushv 60 30 2
	tex "npods ncat-deployment-sctp- 4" || tdie
	popv
}
cmd_tcase_assign_lb_ip() {
	tcase "Assign a loadBalancerIp to svc ncat-$1-sctp"
	assign-lb-ip -svc ncat-$1-sctp || tdie
}
cmd_tcase_internal_sctp() {
	tcase "Internal SCTP traffic to ncat-$1-sctp"
	tex "ncat -i 10ms --sctp ncat-$1-sctp.default.svc.xcluster 5001" || tdie
}
cmd_tcase_set_vip_routes() {
	tcase "Set routes to the VIP address via vm-002"
	ip ro replace 10.0.0.0/24 via 192.168.1.2 || tdie
	ip -6 ro replace 1000::/120 via 1000::1:192.168.1.2 || tdie
}
cmd_tcase_external_sctp() {
	local adr=10.0.0.0
	test "$1" = "ipv6" && adr=1000::
	tcase "External SCTP traffic to $adr"
	tex "ncat -i 10ms --sctp $adr 5001" || tdie
}

. /etc/profile
. /usr/lib/xctest
indent='  '


# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
	if echo $1 | grep -q =; then
		o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
		v=$(echo "$1" | cut -d= -f2-)
		eval "$o=\"$v\""
	else
		o=$(echo "$1" | sed -e 's,-,_,g')
		eval "$o=yes"
	fi
	shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
