#! /bin/sh
##
## qemu-sriov_test --
##
##   Test script for qemu-sriov executed in xcluster.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
me=$dir/$prg
tmp=/tmp/${prg}_$$
test -n "$PREFIX" || PREFIX=1000::1

die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
help() {
	grep '^##' $0 | cut -c3-
	rm -rf $tmp
	exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$prg: $*" >&2
}
dbg() {
	test -n "$__verbose" && echo "$prg: $*" >&2
}


##   tcase_modprobe
##     Load the igb modules
cmd_tcase_modprobe() {
	tcase "Load the igb modules"
	# Check that eth1 doesn't exist (since igb isn't loaded yet)
	ip link show dev eth1 2>&1 && tdie "Eth1 exist. Modules already loaded?"
	modprobe igb || tdie "modprobe igb"
	modprobe igbvf || tdie "modprobe igbvf"
	# Now eth1 should exist
	ip link show dev eth1 || tdie "Eth1 was not created"
	# Check the PF
	check_82576 1 || tdie "Check PF"
}
##   tcase_create_vfs
##     Create 2 VFs
cmd_tcase_create_vfs() {
	tcase "Create 2 VFs"
	# Check that we only have the PF
	check_82576 1 || tdie "Check PF"
	echo 2 > /sys/bus/pci/devices/0000:01:00.0/sriov_numvfs || tdie "Create VFs"
	check_82576 3 || tdie "Check VFs"
	/bin/lspci | grep Virtual 1>&2
}
check_82576() {
	# Just "lspci" doesn't work. Some BusyBox thing?
	local n=$(/bin/lspci | grep 82576 | wc -l)
	echo "Found 82576 devices [$n], expected [$1]"
	test $n -eq $1
}
##   tcase_ifup dev ipv4
##     Bring up an interface and set addresses
cmd_tcase_ifup() {
	tcase "Bring up dev [$1]"
	test -n "$1" || tdie "No dev"
	test -n "$2" || tdie "No address"
	local dev=$1
	local adr=$2
	ip link set up dev $dev || die "Up $dev"
	ip addr add $adr/24 dev $dev || tdie "Assign $adr"
	ip -6 addr add $PREFIX:$adr/120 dev $dev || tdie "Assign $PREFIX:$adr"
}
cmd_tcase_wait_for_link_up() {
	local timeout=10
	local state="UP"
	local dev="eth1"
	test -n "$1" && dev="$1"
	tcase "Wait for link $dev $state"
	pushv $timeout
	tex "check_link_state $dev $state"
}
check_link_state() {
	dev="$1"
	state="$2"
	echo "$(ip link show dev $dev | grep 'state' | cut -d ' ' -f9)"
	test $(ip link show dev $dev | grep 'state' | cut -d ' ' -f9) == $state
}
##   tcase_ping addr
##     Ping address
cmd_tcase_ping() {
	tcase "Ping [$1]"
	test -n "$1" || tdie "No address"
	ping -c1 -W1 $1 || tdie "Ping [$1]"
}

. /etc/profile
. /usr/lib/xctest
indent='  '


# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
	if echo $1 | grep -q =; then
		o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
		v=$(echo "$1" | cut -d= -f2-)
		eval "$o=\"$v\""
	else
		o=$(echo "$1" | sed -e 's,-,_,g')
		eval "$o=yes"
	fi
	shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
