#! /bin/sh
die() {
    echo "$@"
    exit 1
}

hostname | grep -Eq 'vm-[0-9]+$' || die "Invalid hostname [$(hostname)]"
i=$(hostname | cut -d- -f2 | sed -re 's,^0+,,')


start_gobgp() {
	mkdir -p /usr/local/etc
	touch /usr/local/etc/zebra.conf
	zebra --keep_kernel --user root --group root -i /run/zebra.pid \
		> /var/log/zebra.log 2>&1 < /dev/null &
	sleep 2
	echo "/var/log/dumps/core.%e.%p" > /proc/sys/kernel/core_pattern
	gobgpd --log-plain -t yaml -f $1 > /var/log/gobgp.log 2>&1 < /dev/null &
}

vm() {
	true
}

router() {
	local cfg=/etc/gobgp.yaml
	cat > $cfg <<EOF
global:
  config:
    as: 65002
    router-id: 192.168.0.$i
  use-multiple-paths:
    config:
      enabled: true

peer-groups:
  - config:
      peer-group-name: "k8s"
      peer-as: 65001
  - config:
      peer-group-name: "testers"
      peer-as: 65003

dynamic-neighbors:
  - config:
      prefix: "192.168.1.0/24"
      peer-group: "k8s"
  - config:
      prefix: "192.168.2.0/24"
      peer-group: "testers"
  - config:
      prefix: "2000:2::/64"
      peer-group: "testers"
  - config:
      prefix: "1000::1:0:0/96"
      peer-group: "k8s"
zebra:
  config:
    enabled: true
    url: "unix:/run/zserv.api"
    version: 3
    redistribute-route-type-list:
      - "connect"
EOF

	start_gobgp $cfg
}

tester() {
	local cfg=/etc/gobgp.yaml
	cat > $cfg <<EOF
global:
  config:
    as: 65003
    router-id: 192.168.0.$i
  use-multiple-paths:
    config:
      enabled: true
neighbors:
  - config:
      neighbor-address: 192.168.2.201
      peer-as: 65002
  - config:
      neighbor-address: 192.168.2.202
      peer-as: 65002
  - config:
      neighbor-address: 2000:2::201
      peer-as: 65002
  - config:
      neighbor-address: 2000:2::202
      peer-as: 65002
zebra:
  config:
    enabled: true
    url: "unix:/run/zserv.api"
    version: 3
    redistribute-route-type-list:
      - "connect"
EOF

	start_gobgp $cfg
}

case $(hostname) in
	vm-0*)
		vm;;
	vm-20*)
		router;;
	vm-22*)
		tester;;
esac
