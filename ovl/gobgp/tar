#! /bin/sh
# NOTE: A common pattern is to specify "-" (stdout) as out-file,
#  so there must be NO log printouts to stdout!

dir=$(dirname $0); dir=$(readlink -f $dir)
tmp=/tmp/${prg}_$$
die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
log() {
	echo "INFO: $*" >&2
}

test -n "$1" || die "No out-file"

# Local help script
lscript=$dir/gobgp.sh

rm -rf $tmp
mkdir -p $tmp/sbin
for s in $(echo "$SETUP" | tr ',' ' '); do
	test -d $dir/$s || continue
	cp -R $dir/$s/* $tmp
	setup_copied=yes
done
test "$setup_copied" != "yes" && cp -R $dir/default/* $tmp

getx() {
	if test -x $GOPATH/bin/$1; then
		echo $GOPATH/bin/$1
		return 0
	fi
	local xcdir=$(dirname $XCLUSTER)
	if test -x $xcdir/$1; then
		echo $xcdir/$1
		return 0
	fi
	die "Can't find executable [$1]"
}
for n in gobgp gobgpd; do
	f=$(getx $n) || exit 1
	cp $f $tmp/sbin
done

# Copy "zebra"
d=$($lscript zdir)
f=$d/zebra/.libs/zebra
test -x $f || die "Not executable [$f]"
cp $f $tmp/sbin
f=$d/lib/.libs/libzebra.so.1
test -r $f || die "Not readable [$f]"
mkdir -p $tmp/lib64
cp -L $f $tmp/lib64

cd $tmp
tar cf "$1" *
cd - > /dev/null
rm -rf $tmp
