#! /bin/sh

dir=$(dirname $0); dir=$(readlink -f $dir)
tmp=/tmp/xcluster_$$
die() {
    echo "ERROR: $*" >&2
    rm -rf $tmp
    exit 1
}
log() {
    echo "$*" >&2
}
test -n "$1" || die "No out-file"

mkdir -p $tmp/bin $tmp/sbin
for s in $(echo "$SETUP" | tr ',' ' '); do
	test -d $dir/$s || continue
	cp -R $dir/$s/* $tmp
	cd $tmp
	tar cf "$1" *
	cd - > /dev/null
	rm -rf $tmp
	return
done

cp -R $dir/default/* $tmp

# Some binaries can't be replaced by BusyBox applets
f=/bin/kmod
test -x $f || die "Not executable [$f]"
cp $f $tmp/sbin/modprobe
f=/usr/bin/find
test -x $f || die "Not executable [$f]"
cp $f $tmp/bin/find

test -n "$KUBERNETESD" || KUBERNETESD=$GOPATH/src/k8s.io/kubernetes/_output/bin
test -d "$KUBERNETESD" || die "Not a directory [$KUBERNETESD]"
f=$KUBERNETESD/hyperkube
if test -x $f; then
	log $(readlink -f $f)
	cp $f $tmp/bin
else
	for n in kube-controller-manager kube-scheduler kube-apiserver \
		kube-proxy kubectl kubelet; do
		test -x $KUBERNETESD/$n || die "Not executable [$KUBERNETESD/$n]"
		cp $KUBERNETESD/$n $tmp/bin
	done
fi

# Install CNI plugins;
d=$GOPATH/src/github.com/containernetworking/plugins/bin
mkdir -p $tmp/opt/cni/bin
if test -x $d/bridge; then
	log "Using locally built CNI-plugins"
	for n in bridge host-local loopback; do
		test -x $d/$n || die "Not executable [$d/$n]"
		cp $d/$n $tmp/opt/cni/bin
	done
else
	ver=v0.8.2
	log "Using CNI-plugins ver $ver"
	ar=$ARCHIVE/cni-plugins-linux-amd64-$ver.tgz
	test -r "$ar" || die "Not readable [$ar]"
	tar -C $tmp/opt/cni/bin -xf $ar ./bridge ./host-local ./loopback
fi

d=$GOPATH/src/github.com/Nordix/xcluster-cni/image
if test -d $d; then
	log "Using local xcluster-cni"
	rm -f $d/build-date $d/opt/cni/bin/podCIDR
	test -x $d/bin/list-nodes || die "Not executable [$d/bin/list-nodes]"
	cp -r $d/* $tmp
else
	ar=$ARCHIVE/xcluster-cni-image.tar.xz
	test -r "$ar" || die "Not readable [$ar]"
	tar -C $tmp -xf $ar
fi

# Certificates are required for image pull
mkdir -p $tmp/etc/ssl/certs
cp /etc/ssl/certs/ca-certificates.crt $tmp/etc/ssl/certs/

n=$GOPATH/bin/coredns
test -x $n || n=$(dirname $XCLUSTER)/bin/coredns
test -x $n && cp $n $tmp/bin

jq=$(which jq)
test -n "$jq" && cp $jq $tmp/bin

f=$GOPATH/bin/assign-lb-ip
test -x $f && cp $f $tmp/bin

# Install libraries
$XCLUSTER cplib --dest=$tmp $tmp/bin/*

cd $tmp
tar cf "$1" *
cd - > /dev/null
rm -rf $tmp
