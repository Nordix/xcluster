#! /bin/sh

export PATH="/bin:/sbin:/usr/bin:/usr/sbin"
. /etc/profile
test -n "$PREFIX" || PREFIX=1000::1
test -n "$DOMAIN" || DOMAIN=xcluster
test -n "$KUBELET_CFG" || KUBELET_CFG=/etc/kubernetes/kubelet.conf

die() {
	echo "$@"
	exit 1
}

hostname | grep -Eq 'vm-[0-9]+$' || die "Invalid hostname [$(hostname)]"
i=$(hostname | cut -d- -f2 | sed -re 's,^0+,,')
test $i -le 200 || exit 0

test -n "$IMAGE_SERVICE_ENDPOINT" || IMAGE_SERVICE_ENDPOINT=$RUNTIME_ENDPOINT
test -n "$RUNTIME_ENDPOINT" && cat >> $KUBELET_CFG <<EOF
containerRuntimeEndpoint: "$RUNTIME_ENDPOINT"
imageServiceEndpoint: "$IMAGE_SERVICE_ENDPOINT"
EOF

DNS_ADR=192.168.1.$i
NODE_IP=192.168.1.$i,$PREFIX:192.168.1.$i
if test "$BASE_FAMILY" = "IPv6"; then
	sed -i -e 's,bindAddress: 0.0.0.0,bindAddress: "::1",' \
		/etc/kubernetes/kube-proxy.config
	DNS_ADR=$PREFIX:192.168.1.$i
	NODE_IP=$PREFIX:192.168.1.$i,192.168.1.$i
fi
cat >> $KUBELET_CFG <<EOF
clusterDomain: $DOMAIN
clusterDNS:
  - $DNS_ADR
EOF

if test -n "$FEATURE_GATES"; then
	echo "featureGates:" >> $KUBELET_CFG
	for fg in $(echo $FEATURE_GATES | tr , ' '); do
		v=$(echo $fg | sed -e 's,=,: ,')
		echo "  $v" >> $KUBELET_CFG
	done
fi



run_kubelet() {
	kubelet --config=$KUBELET_CFG $KUBELET_ARGS --node-ip=$NODE_IP \
		--kubeconfig $KUBECONFIG $fg_param --runtime-cgroups=/ \
		>> /var/log/kubelet.log 2>&1
}

run_kube_proxy() {
	local i g v
	CLUSTER_CIDR=11.0.0.0/16,1100::/48
	sed -i -e "s,clusterCIDR:.*,clusterCIDR: \"$CLUSTER_CIDR\"," /etc/kubernetes/kube-proxy.config
	kube-proxy --config /etc/kubernetes/kube-proxy.config --v 7 \
		>> /var/log/kube-proxy.log 2>&1
}

monitor() {
	while true; do
		logger -t K8s-monitor "STARTING: $1"
		$1
		logger -t K8s-monitor "DIED: $1"
		sleep 2
		. /etc/profile
	done
}

(monitor run_kubelet) > /dev/null 2>&1 &
echo "$PROXY_MODE" | grep -iq "disable" || \
	(monitor run_kube_proxy) > /dev/null 2>&1 &

