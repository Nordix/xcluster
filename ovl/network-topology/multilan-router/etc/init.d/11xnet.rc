#! /bin/sh
. /usr/lib/network-topology.sh
test -n "$PREFIX" || PREFIX=1000::1

test -n "$__nrouters" || __nrouters=2

vm() {
	ifsetup eth1 1
	local i targets lastrouter=$((200 + __nrouters))
	for i in $(seq 201 $lastrouter); do
		targets="$targets nexthop via 192.168.1.$i"
	done
	ip ro replace default $targets
	targets=''
	for i in $(seq 201 $lastrouter); do
		targets="$targets nexthop via $PREFIX:192.168.1.$i"
	done
	ip -6 ro replace default $targets
}

router() {
	fwsetup
	ifsetup eth1 1
	ifsetup eth2 2

	ip ro add default via 192.168.0.250
	iptables -t nat -A POSTROUTING -s 192.168.1.0/24 -o eth0 -j MASQUERADE
	iptables -t nat -A POSTROUTING -s 192.168.2.0/24 -o eth0 -j MASQUERADE
}

tester() {
	ifsetup eth1 2
	local i targets lastrouter=$((200 + __nrouters))
	for i in $(seq 201 $lastrouter); do
		targets="$targets nexthop via 192.168.2.$i"
	done
	ip ro replace default $targets
	targets=''
	for i in $(seq 201 $lastrouter); do
		targets="$targets nexthop via $PREFIX:192.168.2.$i"
	done
	ip -6 ro replace default $targets
}


case $(hostname) in
	vm-0*)
		vm;;
	vm-20*)
		router;;
	vm-22*)
		tester;;
esac


test -n "$XLAN_TEMPLATE" || exit 0

# Configure extra networks

i=$(hostname | cut -d- -f2 | sed -re 's,^0+,,')

# ifup <net> <interface>
ifup() {
	local n=$1
	local iface=$2

	local adr m4 m6
	adr=$(mkadr $XLAN_TEMPLATE $n $i)
	m4=$(echo $XLAN_TEMPLATE | cut -d/ -f3)
	m6=$((m4 + 96))
	
	sysctl -qw net.ipv6.conf.$iface.accept_dad=0
	ip link set $iface up
	ip addr add $adr/$m4 dev $iface
	ip -6 addr add $PREFIX:$adr/$m6 dev $iface
}

vm_x() {
	local n
	for n in 3 4 5; do
		ifup $n eth$((n - 1))
	done
}

router_202() {
	local n
	for n in 3 4 5; do
		ifup $n eth$n
	done
}

case $(hostname) in
	vm-0*)
		vm_x;;
	vm-202)
		router_202;;
esac
