#! /bin/sh
. /etc/profile
. /usr/lib/network-topology.sh

test -n "$__nrouters" || __nrouters=2

vm() {
	ifsetup eth1 1
	local i targets lastrouter=$((200 + __nrouters))
	for i in $(seq 201 $lastrouter); do
		targets="$targets nexthop via 192.168.1.$i"
	done
	ip ro replace default $targets
	targets=''
	for i in $(seq 201 $lastrouter); do
		targets="$targets nexthop via 1000::1:192.168.1.$i"
	done
	ip -6 ro replace default $targets
}

router() {
	fwsetup
	ifsetup eth1 1
	ifsetup eth2 2

	ip ro add default via 192.168.0.250
	iptables -t nat -A POSTROUTING -s 192.168.1.0/24 -o eth0 -j MASQUERADE
	iptables -t nat -A POSTROUTING -s 192.168.2.0/24 -o eth0 -j MASQUERADE
}

tester() {
	ifsetup eth1 2
	local i targets lastrouter=$((200 + __nrouters))
	for i in $(seq 201 $lastrouter); do
		targets="$targets nexthop via 192.168.2.$i"
	done
	ip ro replace default $targets
	targets=''
	for i in $(seq 201 $lastrouter); do
		targets="$targets nexthop via 1000::1:192.168.2.$i"
	done
	ip -6 ro replace default $targets
}


case $(hostname) in
	vm-0*)
		vm;;
	vm-20*)
		router;;
	vm-22*)
		tester;;
esac

test -n "XLAN_PREFIX" || exit 0

# Addresses for the extra networks;
#  No   vm     router  ipv4                 ipv6
#   1   eth2   eth3    ${XLAN_PREFIX}2.$i   1000::1:${XLAN_PREFIX}2.$i
#   2   eth3   eth4    ${XLAN_PREFIX}3.$i   1000::1:${XLAN_PREFIX}3.$i
#   3   eth4   eth5    ${XLAN_PREFIX}4.$i   1000::1:${XLAN_PREFIX}4.$i
#
# Example; XLAN_PREFIX=169.254.1, vm-001/eth3, address=169.254.13.1

vm_x() {
	local i=$(hostname | cut -d- -f2 | sed -re 's,^0+,,')
	local n
	for n in 2 3 4; do
		ip link set eth$n up
		ip addr add ${XLAN_PREFIX}$n.$i/24 dev eth$n
		ip -6 addr add 1000::1:${XLAN_PREFIX}$n.$i/120 dev eth$n
	done
}

router_202() {
	local i=202
	local n iface
	for n in 2 3 4; do
		iface=eth$((n + 1))
		ip link set $iface up
		ip addr add ${XLAN_PREFIX}$n.$i/24 dev $iface
		ip -6 addr add 1000::1:${XLAN_PREFIX}$n.$i/120 dev $iface
	done
}

case $(hostname) in
	vm-0*)
		vm_x;;
	vm-202)
		router_202;;
esac
