#! /bin/sh

export PATH="/bin:/sbin:/usr/bin:/usr/sbin"
. /etc/profile

die() {
	echo "$@"
	exit 1
}

hostname | grep -Eq 'vm-[0-9]+$' || die "Invalid hostname [$(hostname)]"
i=$(hostname | cut -d- -f2 | sed -re 's,^0+,,')
test $i -le 200 || exit 0
if ! grep -q CNI_INFO /etc/profile; then
	echo CNI_INFO=ovs-cni >> /etc/profile
fi

test -n "$PREFIX" || PREFIX=1000::1

if test "$CNI_OVS" != "LOCAL"; then
	mkdir -p /etc/kubernetes/load
	mv /etc/kubernetes/ovs-cni.yaml /etc/kubernetes/load
fi

# Create the ovs bridge and use "shared L2". See;
# https://github.com/k8snetworkplumbingwg/ovs-cni/blob/main/docs/demo.md
ovs-vsctl add-br br1
ip link set up dev br1
ip addr add 11.0.$i.1/24 dev br1
ip -6 addr add 1100::${i}01/120 dev br1
ip address flush dev eth1
ovs-vsctl add-port br1 eth1
ip addr add 192.168.1.$i/24 dev br1
ip -6 addr add $PREFIX:192.168.1.$i/120 dev br1


mkdir -p /etc/cni/net.d
cat > /etc/cni/net.d/10-ovs.conf <<EOF
{
  "cniVersion": "0.4.0",
  "name": "cni-x",
  "type": "ovs",
  "bridge": "br1",
  "isDefaultGateway": true,
  "vlan": 100,
  "ipam": {
    "type": "host-local",
    "ranges": [
      [ { "subnet": "11.0.$i.0/24" } ],
      [ { "subnet": "1100::${i}00/120" } ]
    ]
  }
}
EOF

mkdir -p /etc/cni/net.d/ovs.d
cat > /etc/cni/net.d/ovs.d/ovs.conf <<EOF
{
  "socket_file": "unix:/usr/local/var/run/openvswitch/db.sock",
  "link_state_check_retries": 5,
  "link_state_check_interval": 1000
}
EOF


iptables -t nat -I POSTROUTING 1 -s 11.0.0.0/16 ! -d 11.0.0.0/16 -j MASQUERADE
ip6tables -t nat -I POSTROUTING 1 -s 1100::/16 ! -d 1100::/16 -j MASQUERADE


