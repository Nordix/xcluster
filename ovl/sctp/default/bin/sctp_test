#! /bin/sh
##
## sctp_test --
##
##   Test script for sctp executed in xcluster.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
me=$dir/$prg
tmp=/tmp/${prg}_$$
test -n "$DOMAIN" || DOMAIN=xcluster
test -n "$PREFIX" || PREFIX=1000::1
test -n "$FIRST_WORKER" || FIRST_WORKER=1
yamld=/etc/kubernetes/sctp

die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
help() {
	grep '^##' $0 | cut -c3-
	rm -rf $tmp
	exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$prg: $*" >&2
}
dbg() {
	test -n "$__verbose" && echo "$prg: $*" >&2
}

cmd_tcase_check_namespaces() {
    test_namespaces $1
}
cmd_tcase_check_nodes() {
    test_nodes
}

cmd_tcase_start_servers() {
	tcase "Start servers"
	apply_k8s $yamld
	assign-lb-ip -svc sctp -ip 10.0.0.72,1000::72
	assign-lb-ip -svc sctp-cluster -ip 10.0.0.74,1000::74
	assign-lb-ip -svc sctp-hostnet -ip 10.0.0.73,1000::73
	test_daemonset sctp-test 180
	test_daemonset sctp-test-hostnet 180
}

cmd_tcase_vip_ecmp_route() {
	local net=1
	test -n "$1" && net=$1
	tcase "Setup VIP ECMP routes. net=$net"
	vip_route $net
}
cmd_tcase_vip_route() {
	tcase "Setup VIP route to [$1]"
	ip ro add 10.0.0.0/24 via $1
	ip -6 ro add 1000::/120 via $PREFIX:$1
}

cmd_tcase_nfqlb_setup() {
	local opt
	if test -n "$UDP_ENCAP"; then
		tcase "Setup the nfqlb load-balancer (udp-encap=$UDP_ENCAP)"
		opt=--sctp_encap=$UDP_ENCAP
	else
		tcase "Setup the nfqlb load-balancer"
	fi

	# Disable HW offload
	ethtool -K eth1 gro off gso off tso off
	ethtool -K eth2 gro off gso off tso off

	# Setup iptables
	iptables -t mangle -N VIP
	iptables -t mangle -A VIP -j NFQUEUE --queue-num 2
	iptables -t mangle -A PREROUTING -i eth2 -d 10.0.0.0/24 -j VIP

	ip6tables -t mangle -N VIP
	ip6tables -t mangle -A VIP -j NFQUEUE --queue-num 2
	ip6tables -t mangle -A PREROUTING -i eth2 -d 1000::/112 -j VIP

	# Setup routes
	local n
	local net=1
	hostname | grep -q 201 || net=4
	for n in $(seq 1 $__nvm); do
		ip rule add fwmark $n table $n
		ip route add default via 192.168.$net.$n table $n
		ip -6 rule add fwmark $n table $n
		ip -6 route add default via 1000::1:192.168.$net.$n table $n
	done
	
	# Start the load-balancer
	nfqlb init --M=900 --N=20
	nfqlb lb $opt $@ > /var/log/nfqlb.log 2>&1 &

	# Activate targets
	for n in $(seq 1 $__nvm); do
		nfqlb activate --index=$n $n
	done
}

cmd_tcase_sctp_server() {
	tcase "Start SCTP server in pod"
	local addr="10.0.0.1,1000::81"
	test -n "$1" && addr=$1
	if test -n "$UDP_ENCAP"; then
		ip netns exec pod sysctl -w net.sctp.encap_port=$UDP_ENCAP
		ip netns exec pod sysctl -w net.sctp.udp_port=$UDP_ENCAP
	fi
	local cmd="sctpt server --log 6 --addr $addr"
	local log=/var/log/sctpt.log
	ip netns exec pod sh -c "exec $cmd > $log 2>&1 &"
}

. /etc/profile
. /usr/lib/xctest
indent='  '


# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
	if echo $1 | grep -q =; then
		o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
		v=$(echo "$1" | cut -d= -f2-)
		eval "$o=\"$v\""
	else
		o=$(echo "$1" | sed -e 's,-,_,g')
		eval "$o=yes"
	fi
	shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
