
log syslog all;
log "/var/log/bird.log" { debug, trace, info, remote, warning, error, auth, fatal, bug };

# The Device protocol is not a real routing protocol. It does not generate any
# routes and it only serves as a module for getting information about network
# interfaces from the kernel. It is necessary in almost any configuration.
protocol device {
}

# Have to add BFD protocol so that BGP could ask for a BFD session
protocol bfd {
	interface "*" {
		passive on; # wait for peer to send BFD packet first
	};
}

# filter telling what BGP nFE can send to BGP GW peer
# note: should be the VIP addresses
filter cluster_e_v4 {
	if net ~ [ 2.2.2.2/32, 3.3.3.3/32, 4.4.4.4/32 ] then accept;
	else reject;
}
# filter telling what BGP nFE can accept from BGP GW peer
filter cluster_i_v4 {
	if ( net ~ [ 0.0.0.0/0 ] ) then accept;
	reject;
}
# filter telling what BGP GW can send to BGP nFE peer
filter gw_e_v4 {
	if ( net ~ [ 0.0.0.0/0 ] ) then accept;
	else reject;
}

# filter telling what BGP nFE can send to BGP GW peer
# note: should be the VIP addresses
filter cluster_e_v6 {
	if net ~ [ 2000::2/128, 3000::3/128, 4000::4/128 ] then accept;
	else reject;
}
# filter telling what BGP nFE can accept from BGP GW peer
filter cluster_i_v6 {
	if ( net ~ [ 0::/0 ] ) then accept;
	reject;
}
# filter telling what BGP GW can send to BGP nFE peer
filter gw_e_v6 {
	if ( net ~ [ 0::/0 ] ) then accept;
	else reject;
}

# filter matching default IPv4 routes
filter default_v4 {
	if ( net ~ [ 0.0.0.0/0 ] ) then accept;
	else reject;
}
# filter matching default IPv4 routes
filter default_v6 {
	if ( net ~ [ 0::/0 ] ) then accept;
	else reject;
}

# filter telling what BGP nFE can send to BGP GW peer
# note: should be the VIP addresses
# Since VIPs are configured as static blackhole routes in BIRD, there's
# no point maintaining complex v4/v6 filters. Such filters would require
# updates upon changes related to VIP addresses anyways...
filter cluster_e_static {
	if source = RTS_STATIC && dest = RTD_BLACKHOLE then accept;
	else reject;
}

template bgp LINK {
 	debug {events};
 	# will imply that the peer is directly connected through the interface
 	# interface "eth0"; # does not work with multihop
 	direct;
 	hold time 3;
	bfd on;
	# ECFE uses the same graceful restart setting...
	graceful restart off;
	setkey off;
	ipv4 {
		import none;
		export none;
		next hop self;		# advertise this router as next hop
		#gateway direct;

	};
	ipv6 {
		import none;
		export none;
		next hop self;	# advertise this router as next hop
		#gateway direct;
	};
}

