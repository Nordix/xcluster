#! /bin/sh
# NOTE: A common pattern is to specify "-" (stdout) as out-file,
#  so there must be NO log printouts to stdout!

dir=$(dirname $0); dir=$(readlink -f $dir)
tmp=/tmp/$USER/xcluster_$$
die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
log() {
	echo "INFO: $*" >&2
}
findf() {
	f=$ARCHIVE/$1
	test -r $f && return 0
	f=$HOME/Downloads/$1
	test -r $f
}

test -n "$1" || die "No out-file"
eval $($dir/multus.sh env)

mkdir -p $tmp/root $tmp/bin
cp -R $dir/default/* $tmp

# This ovl it intended to be used from other ovl's so only the
# essentials are in "default/", the rest is in "test/".
test -n "$MULTUS_TEST" && cp -R $dir/test/* $tmp

# If multus is installed with the "multus-install" image install
# only test code
if test "$MULTUS_TEST" = "image"; then
	mkdir -p $tmp/etc/kubernetes/multus
	cp $dir/multus-install.yaml $tmp/etc/kubernetes/multus
	cd $tmp
	tar cf "$1" *
	cd - > /dev/null
	rm -rf $tmp
	exit 0
fi

ar=multus-cni_${__multus_ver}_linux_amd64.tar.gz
findf $ar || die "Not found [$ar]"
mkdir -p $tmp/opt/cni/bin
tar -C $tmp/opt/cni/bin --strip-components=1 -xf $f
rm -f $tmp/opt/cni/bin/README.md $tmp/opt/cni/bin/LICENSE

mkdir -p $tmp/opt/cni/bin
x=$($XCLUSTER ovld cni-plugins)/cni-plugins.sh
$x install --dest=$tmp/opt/cni/bin || die

if findf whereabouts-amd64; then
	chmod a+x $f
	v=$($f --version 2>&1 | grep whereabouts)
	log "Including $v"
	cp $f $tmp/opt/cni/bin/whereabouts
	strip $tmp/opt/cni/bin/whereabouts
fi

test -n "$NODEANNOTATION_DIR" || \
	NODEANNOTATION_DIR=$GOPATH/src/github.com/Nordix/ipam-node-annotation
f=$NODEANNOTATION_DIR/_output/kube-node
if test -x $f; then
	log "Including kube-node ipam"
	cp $f $tmp/opt/cni/bin
fi


cd $tmp
tar cf "$1" *
cd - > /dev/null
rm -rf $tmp
