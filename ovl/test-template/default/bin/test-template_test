#! /bin/sh
##
## <name>_test --
##
##   Test script for <name> executed in xcluster.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
me=$dir/$prg
tmp=/tmp/${prg}_$$

die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
help() {
	grep '^##' $0 | cut -c3-
	rm -rf $tmp
	exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$prg: $*" >&2
}
dbg() {
	test -n "$__verbose" && echo "$prg: $*" >&2
}

cmd_tcase_check_namespaces() {
	test_namespaces
}
cmd_tcase_check_nodes() {
	test_nodes
}
cmd_tcase_check_coredns() {
	test_coredns
}
cmd_tcase_start_mconnect() {
	start_mconnect /etc/kubernetes/mconnect.yaml || tdie
	if test "$1" = "dual-stack"; then
		$kubectl apply -f /etc/kubernetes/mconnect-svc-ipv6.yaml || tdie
	fi
}
cmd_tcase_nslookup() {
	tcase "Nslookup $1"
	test -n "$1" || tdie "Nothing to lookup"
	pushv 40 20 2
	tex "nslookup $1" || tdie
	popv
}
cmd_tcase_internal_mconnect() {
	local adr=mconnect.default.svc.xcluster
	tcase "Traffic to $adr"
	tex do_mconnect $adr || tdie
	if test "$1" = "dual-stack"; then
		adr=mconnect-ipv6.default.svc.xcluster
		tcase "Traffic to $adr"
		do_mconnect $adr || tdie
	fi
}
cmd_tcase_start_alpine() {
	tcase "Start alpine pods"
	$kubectl apply -f /etc/kubernetes/alpine.yaml || tdie
}
cmd_tcase_check_alpine() {
	tcase "Check alpine pods"
	tex "npods alpine-deployment- 4" || tdie
}

get_global_addresses() {
	$kubectl exec $1 ip addr show dev eth0 | grep 'scope global' | sed -E 's,.*inet.? ([^ ]+) .*,\1,' | tr '\n' ' '
}

cmd_tcase_check_pod_addresses() {
	tcase "Check POD addresses for; $1"
	local adr found=0
	local pod=$(get_pod alpine)
	test -n "$pod" || tdie "Can't find an alpine POD"
	local adrs=$(get_global_addresses $pod)
	tlog "POD addresses [$adrs]"
	for adr in $adrs; do
		if echo $adr | grep -q : ; then
			found=$((found+100))
		else
			found=$((found+1))
		fi
	done
	case $1 in
		ipv4) test $found -eq 1 || tdie "Invalid adr for $1; $adrs";;
		ipv6) test $found -eq 100 || tdie "Invalid adr for $1; $adrs";;
		*) test $found -eq 101 || tdie "Invalid adr for $1; $adrs";;
	esac
}


. /etc/profile
. /usr/lib/xctest
indent='  '


# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
	if echo $1 | grep -q =; then
		o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
		v=$(echo "$1" | cut -d= -f2-)
		eval "$o=\"$v\""
	else
		o=$(echo "$1" | sed -e 's,-,_,g')
		eval "$o=yes"
	fi
	shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
