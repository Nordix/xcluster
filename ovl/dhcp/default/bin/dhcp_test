#! /bin/sh
##
## dhcp_test --
##
##   Test script for dhcp executed in xcluster.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
me=$dir/$prg
tmp=/tmp/${prg}_$$
. /etc/profile
test -n "$PREFIX" || PREFIX=1000::1


die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
help() {
	grep '^##' $0 | cut -c3-
	rm -rf $tmp
	exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$prg: $*" >&2
}
dbg() {
	test -n "$__verbose" && echo "$prg: $*" >&2
}

## Test-cases;

##   version - Log versions
cmd_tcase_version() {
	log_version
}

##   ifup - Bring UP interfaces
cmd_tcase_ifup() {
	tcase "Bring UP interfaces [$@]"
	local iface
	for iface in $@; do
		sysctl -qw net.ipv6.conf.$iface.accept_dad=0 || tdie
		ip link set $iface up || tdie
	done
}

set_net() {
	case $1 in
		eth3) net=3;;
		eth4) net=4;;
		eth5) net=5;;
		*) tdie "Invalid interface [$1]";;
	esac
}

##   udhcpd4 - Setup a udhcpd server (only IPv4 supported)
cmd_tcase_udhcpd4() {
	tcase "Setup an IPv4 udhcpd server on [$1]"
	test -n "$1" || tdie "No interface"
	test "$(hostname)" = "vm-202" || die "Must run on vm-202"
	set_net $1
	export IFACE=$1
	ip addr add 192.168.$net.202/24 dev $IFACE
	export RSTART=192.168.$net.1
	export REND=192.168.$net.20
	export SUBNET=255.255.255.0
	local cfg=/etc/udhcp/udhcpd.$IFACE.conf
	envsubst < /etc/udhcp/udhcpd.conf > $cfg
	mkdir -p /var/lib/misc
	touch /var/lib/misc/udhcpd.leases
	udhcpd -f $cfg > /var/log/udhcpd.$IFACE 2>&1 &
	return 0
}

##   dhcpd4 - Setup a ISC dhcp server
cmd_tcase_dhcpd4() {
	tcase "Setup a ISC dhcp server [$1]"
	test -n "$1" || tdie "No interface"
	test "$(hostname)" = "vm-202" || die "Must run on vm-202"
	test -n "$__prefix" || tdie "No prefix"

	local cfg log cidr mask adr lf iface
	iface=$1
	cidr=$(echo $__prefix | cut -d/ -f1)
	mask=$(echo $__prefix | cut -d/ -f2)
	test "$mask" = "24" || tdie "Can only handle /24"
	adr=$(ipu makeip --cidr=$cidr/24/24 --host=202)
	log=/var/log/dhcpd4.$iface
	lf=/var/db/dhcpd4.$iface.leases
	cfg=/etc/dhcp/dhcp4.$iface.conf

	tlog "Local address on $iface; $adr/$mask"
	ip addr replace $adr/$mask dev $iface
	export RSTART=$(ipu makeip --cidr=$cidr/24/24 --host=1)
	export REND=$(ipu makeip --cidr=$cidr/24/24 --host=20)
	export SUBNET="$cidr netmask 255.255.255.0"
	envsubst < /etc/dhcp/dhcp4.conf > $cfg
	cat $cfg
	mkdir -p /var/db; touch $lf
	dhcpd -d -cf $cfg -lf $lf --no-pid $iface > $log 2>&1 &
}
##   dhcpd6 - Setup a ISC dhcpv6 server
cmd_tcase_dhcpd6() {
	tcase "Setup a ISC dhcpv6 server [$1]"
	test -n "$1" || tdie "No interface"
	test "$(hostname)" = "vm-202" || die "Must run on vm-202"
	test -n "$__prefix" || tdie "No prefix"

	local cfg log cidr mask adr lf iface
	iface=$1
	cidr=$(echo $__prefix | cut -d/ -f1)
	cidr=$(ipu makeip --cidr=$cidr/128)  # (normalize)
	mask=$(echo $__prefix | cut -d/ -f2)
	adr=$(ipu makeip --cidr=$cidr/120/120 --host=202)
	log=/var/log/dhcpd6.$iface
	lf=/var/db/dhcpd6.$iface.leases
	cfg=/etc/dhcp/dhcp6.$iface.conf

	tlog "Local address on $iface; $adr/$mask"
	ip -6 addr add $adr/$mask dev $iface
	export RSTART=$(ipu makeip --cidr=$cidr/120/120 --host=1)
	export REND=$(ipu makeip --cidr=$cidr/120/120 --host=20)
	export SUBNET="$__prefix"
	envsubst < /etc/dhcp/dhcp6.conf > $cfg
	mkdir -p /var/db; touch $lf
	dhcpd -6 -d -cf $cfg -lf $lf --no-pid $iface > $log 2>&1 &
}

##   acquire4 - Acquire an IPv4 address
cmd_tcase_acquire4() {
	tcase "Acquire an IPv4 address [$1]"
	test -n "$1" || tdie "No interface"
	mkdir -p $tmp
	if ! udhcpc -nqfo -t 1 -i $1 > $tmp/out 2>&1; then
		cat $tmp/out
		tdie "No IP acuired"
	fi
	local ip=$(ip addr show dev $1 | grep 'inet ' | grep -oE '[0-9][0-9/.]+')
	tlog "Acquired [$ip]"
}

##   acquire6 - Acquire an IPv6 address
cmd_tcase_acquire6() {
	tcase "Acquire an IPv6 address [$1]"
	test -n "$1" || tdie "No interface"
	mkdir -p $tmp
	export __family=-6
	export __mask
	if ! udhcpc6 -nqfo -t 1 -i $1 > $tmp/out 2>&1; then
		cat $tmp/out
		tdie "No IP acuired"
	fi
	local ip=$(ip addr show dev $1 scope global | grep 'inet6 ' | grep -oE '[0-9a-f][0-9a-f:]+/[0-9]+')
	tlog "Acquired [$ip]"
}
##   radvd_start - Start router advertisement daemon
cmd_tcase_radvd_start() {
	tcase "Start router advertisement daemon [$1]"
	test -n "$1" || tdie "No interface"
	test -n "$__prefix" || fd00:100::/64
	local cfg log cidr mask adr
	cidr=$(echo $__prefix | cut -d/ -f1)
	mask=$(echo $__prefix | cut -d/ -f2)
	adr=$(ipu makeip --cidr=$cidr/120/120 --host=202)
	export IFACE=$1
	export IPREFIX=$__prefix
	cfg=/etc/radvd/radvd.$IFACE.conf
	log=/var/log/radvd.$IFACE

	tlog "Local address on $IFACE [$adr]"
	ip -6 addr replace $adr/$mask dev $IFACE
	envsubst < /etc/radvd/radvd.conf > $cfg
	radvd -n -d 5 -C $cfg -m stderr > $log 2>&1 &
}
##   slaac - Check SLAAC address
cmd_tcase_slaac() {
	tcase "Check SLAAC address [$1]"
	test -n "$1" || tdie "No interface"
	tex "ip addr show dev $1 scope global | grep inet6" || tdie
	local ip=$(ip addr show dev $1 scope global | grep 'inet6 ' | grep -oE '[0-9a-f][0-9a-f:]+/[0-9]+')
	tlog "IP $ip"
}
##   netns - Create Network Name spaces
cmd_tcase_netns() {
	tcase "Create Network Name spaces"
	netns_test create
}
##   bridge_create <iface> - Create a bridge and enslave the interface
cmd_tcase_bridge_create() {
	tcase "Create a bridge and enslave [$1]"
	test -n "$1" || tdie "No interface"
	local br=br-$1
	ip link add name $br type bridge || tdie
	ip link set up dev $br || die
	ip link set dev $1 master $br || tdie
}
##   bridge_config - Configure CNI-bridge
cmd_tcase_bridge_config() {
	tcase "Configure CNI-bridge [$1]"
	test -n "$1" || tdie "No interface"
	test -x /opt/cni/bin/bridge || die "CNI-plugins not included"
	test -n "$1" || tdie "No interface"
	mkdir -p /etc/cni/net.d
	cat > /etc/cni/net.d/bridge-$1.conf <<EOF
{
    "cniVersion": "1.0.0",
    "name": "br-$1",
    "type": "bridge",
    "bridge": "br-$1",
    "ipam": {
      "type": "dhcp"
    }
}
EOF
}
##   bridge_start - Connect PODs using CNI-bridge
cmd_tcase_bridge_start() {
	tcase "Connect PODs using CNI-bridge [$1]"
	test -n "$1" || tdie "No interface"
	local cfg=/etc/cni/net.d/bridge-$1.conf
	test -r $cfg || die "Bridge not configured"
	local n dev=br-$1
	# This takes an age so do it in parallel
	for n in $(netns_test name); do
		# These takes >1s (because of DAD) so execute in parallel
		CNI_CONTAINERID=$n CNI_NETNS=/var/run/netns/$n CNI_IFNAME=$dev \
			CNI_PATH=/opt/cni/bin CNI_COMMAND=ADD /opt/cni/bin/bridge \
			< $cfg > /tmp/$n.json &
	done
	wait
}
##   bridge_check_slaac - Check SLAAC addresses in PODs
cmd_tcase_bridge_check_slaac() {
	tcase "Check SLAAC IPv6 addresses in PODs [$1]"
	test -n "$1" || tdie "No interface"
	local n ip
	for n in $(netns_test name); do
		tex "chk_slaac $1 $n" || die "No IPv6 adr in [$n]"
		ip=$(ip -n $n addr show dev br-$1 scope global | grep 'inet6 ' | grep -oE '[0-9a-f][0-9a-f:]+/[0-9]+')
		tlog "$n [$ip]"
	done
}
chk_slaac() {
	ip -n $2 addr show dev br-$1 scope global | grep 'inet6 '
}
##   cni_dhcp_start - Start dhcp CNI-plugin daemon
cmd_tcase_cni_dhcp_start() {
	tcase "Start dhcp CNI-plugin daemon"
	/opt/cni/bin/dhcp daemon > /var/log/dhcp-daemon.log 2>&1 &
	return 0
}
##   bridge_check_dhcp - Check DHCP acquired IPv4 addresses
cmd_tcase_bridge_check_dhcp() {
	tcase "Check DHCP acquired IPv4 addresses [$1]"
	test -n "$1" || tdie "No interface"
	local n ip
	for n in $(netns_test name); do
		tex "chk_dhcp $1 $n" || die "No IPv4 adr in [$n]"
		ip=$(ip -n $n addr show dev br-$1 scope global | grep 'inet 192' | grep -oE '1[0-9.]+/[0-9]+')
		tlog "$n [$ip]"
	done
}
chk_dhcp() {
	ip -n $2 addr show dev br-$1 scope global | grep 'inet 192'
}


. /usr/lib/xctest
indent='  '

##
# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
	if echo $1 | grep -q =; then
		o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
		v=$(echo "$1" | cut -d= -f2-)
		eval "$o=\"$v\""
	else
		o=$(echo "$1" | sed -e 's,-,_,g')
		eval "$o=yes"
	fi
	shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
