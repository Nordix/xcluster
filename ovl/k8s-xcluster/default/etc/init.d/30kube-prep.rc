#! /bin/sh

export PATH="/bin:/sbin:/usr/bin:/usr/sbin"
. /etc/profile
test -n "$PREFIX" || PREFIX=1000::1

die() {
	echo "$@"
	exit 1
}

test -n "$FIRST_WORKER" || echo "FIRST_WORKER=2" >> /etc/profile
grep -q KUBECONFIG /etc/profile || \
	echo "KUBECONFIG=/etc/kubernetes/kubeconfig.token" >> /etc/profile
echo "export KUBECONFIG" >> /etc/profile

hostname | grep -Eq 'vm-[0-9]+$' || die "Invalid hostname [$(hostname)]"
i=$(hostname | cut -d- -f2 | sed -re 's,^0+,,')
test $i -le 200 || exit 0

printf '35f15062-7e2b-11e9-b640-0000000100%02x\n' $i > /etc/machine-id

if test -n "$PROXY_MODE" -a "$PROXY_MODE" != "ipvs"; then
   sed -i -e "s,mode: \"ipvs\",mode: \"$PROXY_MODE\"," /etc/kubernetes/kube-proxy.config
   ip6tables -t nat -N KUBE-MARK-DROP
   iptables -t nat -N KUBE-MARK-DROP
fi

if test "$BASE_FAMILY" = "IPv6"; then
	sed -i -e "s,192.168.1.1:,[$PREFIX:192.168.1.1]:," \
		/etc/kubernetes/kubeconfig
	sed -i -e "s,192.168.1.1:,[$PREFIX:192.168.1.1]:," \
		/etc/kubernetes/kubeconfig.token
fi

# Work around for bad install of dropbear
test -r /usr/bin/dbclient || ln /bin/dbclient /usr/bin/dbclient

mount -t cgroup2 cgroup2 /sys/fs/cgroup
mount --make-rshared /
mkdir -p /var/lib/kubelet

echo 1 > /proc/sys/net/core/fb_tunnels_only_for_init_net
echo 1 > /proc/sys/net/ipv6/conf/all/forwarding
echo 1 > /proc/sys/net/ipv4/ip_forward

# The api-server need access to services and pods for web-hooks.
# NOTE; This does NOT work with Cilium!
if test $i -eq 1; then
	ip ro replace 11.0.0.0/16 via 192.168.1.2
	ip ro replace 12.0.0.0/16 via 192.168.1.2
	if test "$BASE_FAMILY" = "IPv6"; then
		ip -6 ro replace 1100::/48 via $PREFIX:192.168.1.2
		ip -6 ro replace fd00:4000::/112 via $PREFIX:192.168.1.2
	fi
fi

# https://github.com/kubernetes/kubernetes/issues/87426
modprobe br-netfilter
sysctl -w net.bridge.bridge-nf-call-iptables=1

# New security updates in v1.20
key=/srv/kubernetes/server.key
grep -q API_FLAGS /etc/profile || \
	echo "API_FLAGS='--service-account-signing-key-file=$key --service-account-issuer=Nemo --service-account-key-file=$key'" >> /etc/profile


f=/etc/kubernetes/kube-proxy.config
for g in $(echo $FEATURE_GATES | tr ',' ' '); do
	g=$(echo $g | sed -e 's,=,: ,')
	sed -i -e "/featureGates:/a \  $g" $f
done
