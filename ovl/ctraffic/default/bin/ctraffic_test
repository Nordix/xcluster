#! /bin/sh
##
## ctraffic_test --
##
##   Test script for ctraffic executed in xcluster.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
me=$dir/$prg
tmp=/tmp/${prg}_$$
test -n "$DOMAIN" || DOMAIN=xcluster
yamld=/etc/kubernetes/ctraffic

die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
help() {
	grep '^##' $0 | cut -c3-
	rm -rf $tmp
	exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$prg: $*" >&2
}
dbg() {
	test -n "$__verbose" && echo "$prg: $*" >&2
}

cmd_tcase_check_namespaces() {
	test_namespaces
	tlog "$(kubectl version | grep Server)"
}
cmd_tcase_check_nodes() {
	test_nodes
}
cmd_tcase_start_ctraffic() {
	test -n "$1" && __mode=$1
	tcase "Start mode=$__mode (ctraffic $(ctraffic -version))"
	apply_k8s $yamld

	local base=10.0.0.
	ipv6base && base=1000::
	assign-lb-ip -svc ctraffic-lb -ip ${base}0
	assign-lb-ip -svc ctraffic-deployment-lb -ip ${base}1

	test_deployment ctraffic-deployment 180
	test_daemonset ctraffic 180
}

cmd_tcase_routes() {
	tcase "Setup VIP routes"
	vip_route
}

cmd_tcase_internal_traffic() {
	tcase "Internal traffic"
	traffic_test ctraffic.default.svc.$DOMAIN
}
cmd_tcase_external_traffic() {
	local adr=10.0.0.0
	ipv6base && adr="[1000::]"
	tcase "External traffic to $adr"
	traffic_test $adr
}

traffic_test() {
	local x m
	ctraffic -address $1:5003 \
		-rate 50 -nconn 10 -timeout 5s > /tmp/ctraffic.out
	jq . < /tmp/ctraffic.out
	for m in FailedConnections Dropped FailedConnects; do
		x=$(jq .$m < /tmp/ctraffic.out)
		test $x -eq 0 || tdie "Metric $m [$x]"
	done
	m=Retransmits
	x=$(jq .$m < /tmp/ctraffic.out)
	test $x -gt 10 && tdie "Unexpected $m [$x]"
	test $x -gt 0 && tlog "$m [$x]"
	return 0
}

cmd_tcase_collect_stats() {
	local adr=10.0.0.0
	ipv6base && adr="[1000::]"
	tcase "External traffic to $adr with -stats=all"
	ctraffic -address $adr:5003 -stats=all \
		-rate 160 -nconn 16 -timeout 5s > /tmp/ctraffic.out
}

cmd_tcase_start_traffic() {
	local adr=10.0.0.0
	ipv6base && adr="[1000::]"
	tcase "Start traffic to $adr [$@]"
	ctraffic -address $adr:5003 $@ -stats=all > /tmp/ctraffic.out 2> /dev/null &
	ps www | grep -v grep | grep -q 'ctraffic ' || tdie "Not started"
}

cmd_tcase_wait() {
	test -n "$__timeout" || __timeout=30
	local now=$(date +%s)
	local deadline=$((now + __timeout))
	tcase "Wait for ctraffic to finish"
	while ps www | grep -v grep | grep -q 'ctraffic '; do
		now=$(date +%s)
		test $now -gt $deadline && tdie Timeout
		sleep 2
	done
	return 0
}

cmd_tcase_inject_packet_loss() {
	local loss=0.05
	test -n "$1" && loss=$1
	tcase "Inject packet loss"
	iptables -A INPUT -i eth1 -m statistic --mode random --probability $loss -j DROP
}
cmd_tcase_remove_packet_loss() {
	tcase "Remove packet loss"
	iptables -D INPUT 1
}

. /etc/profile
. /usr/lib/xctest
indent='  '


# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
	if echo $1 | grep -q =; then
		o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
		v=$(echo "$1" | cut -d= -f2-)
		eval "$o=\"$v\""
	else
		o=$(echo "$1" | sed -e 's,-,_,g')
		eval "$o=yes"
	fi
	shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
