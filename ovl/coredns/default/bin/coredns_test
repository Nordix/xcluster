#! /bin/sh
##
## coredns_test --
##
##   Test script for coredns executed in xcluster.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
me=$dir/$prg
tmp=/tmp/${prg}_$$
test -n "$__cname" || __cname=xcluster

die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
help() {
	grep '^##' $0 | cut -c3-
	rm -rf $tmp
	exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$prg: $*" >&2
}
dbg() {
	test -n "$__verbose" && echo "$prg: $*" >&2
}
cni_plugin_info() {
	local f d=/etc/kubernetes/load

	f=$d/quick-install.yaml
	if test -r $f; then
		grep '  image:' $f | grep -o 'cilium:.*' | tr -d '"' | uniq
		return 0
	fi

	f=$d/calico.yaml
	if test -r $f; then
		grep '  image:' $f | grep -o "calico/cni:.*" | uniq
		return 0
	fi

	f=$d/xcluster-cni.yaml
	if test -r $f; then
		grep '  image:' $f | grep -o "xcluster-cni:.*"
		return 0
	fi

	f=$d/weave.yaml
	if test -r $f; then
		grep '  image:' $f | grep -o "weave-kube:.*" | tr -d "'" | uniq
		return 0
	fi

	echo "xcluster internal"
}

cmd_tcase_check_namespaces() {
	test_namespaces
	tlog "$(kubectl version --short=true | grep Server)"
	tlog "$(uname -s -r -v)"
	tlog "CNI-plugin; $(cni_plugin_info)"
	tlog "Proxy-$(grep mode /etc/kubernetes/kube-proxy.config)"
}
cmd_tcase_check_nodes() {
	test_nodes
}
cmd_tcase_start_coredns_and_mserver() {
	tcase "Start the CoreDNS POD and mserver test-pod"
	$kubectl apply -f /etc/kubernetes/coredns.yaml || tdie
	$kubectl apply -f /etc/kubernetes/mserver-daemonset.yaml || tdie
	test_deployment coredns 40
	test_daemonset mserver-daemonset 40
}

. /etc/profile
. /usr/lib/xctest
indent='  '


# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
	if echo $1 | grep -q =; then
		o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
		v=$(echo "$1" | cut -d= -f2-)
		eval "$o=\"$v\""
	else
		o=$(echo "$1" | sed -e 's,-,_,g')
		eval "$o=yes"
	fi
	shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
