#! /bin/sh
die() {
	echo "$@"
	exit 1
}

hostname | grep -Eq 'vm-[0-9]+$' || die "Invalid hostname [$(hostname)]"
i=$(hostname | cut -d- -f2 | sed -re 's,^0+,,')

test $i -le 200 || exit 0

# Generate a /etc/hosts
cat > /etc/hosts <<EOF
127.0.0.1               localhost.localdomain localhost
::1                     localhost.localdomain localhost
EOF
for x in $(seq 1 24); do
	printf "192.168.1.$x vm-%03d\\n" $x >> /etc/hosts
done

# Work around for bad install of dropbear
test -r /usr/bin/dbclient || ln /bin/dbclient /usr/bin/dbclient

mount -t cgroup cgroup /sys/fs/cgroup

# This is required for; https://github.com/rancher/k3s/issues/259
#ip ro replace default via 192.168.1.201
#ip -6 ro replace default via 1000::1:192.168.1.201

export K3S_CLUSTER_SECRET=SECRET

echo "export KUBECONFIG=/etc/kubeconfig" >> /etc/profile
echo "alias kubectl='k3s kubectl'" >> /etc/profile

if test $i -eq 1; then
	# Start the server only on vm-001
	(exec k3s server --disable-agent --write-kubeconfig /etc/kubeconfig \
		--no-deploy servicelb --no-deploy traefik \
		> /var/log/k3s-server.log 2>&1) &
	exit 0
fi

# Start agent only on all nodes except vm-001
(exec k3s agent --node-ip=192.168.1.$i --server https://192.168.1.1:6443 \
	--flannel-iface eth1 --containerd-config-template /etc/containerd.conf \
	> /var/log/k3s-agent.log 2>&1) &

# Get /etc/kubeconfig from the server
ssh="dbclient -y -y"
while ! $ssh vm-001 test -r /etc/kubeconfig 2> /dev/null; do
	sleep 1
done
$ssh vm-001 cat /etc/kubeconfig 2> /dev/null \
	| sed -e 's,localhost,vm-001,' > /etc/kubeconfig
