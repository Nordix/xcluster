#! /bin/sh
# NOTE: A common pattern is to specify "-" (stdout) as out-file,
#  so there must be NO log printouts to stdout!

dir=$(dirname $0); dir=$(readlink -f $dir)
tmp=/tmp/$USER/xcluster_$$
die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
log() {
	echo "INFO: $*" >&2
}

test -n "$1" || die "No out-file"

mkdir -p $tmp
for s in $(echo "$SETUP" | tr ',' ' '); do
	test -d $dir/$s || continue
	cp -R $dir/$s/* $tmp
	setup_copied=yes
done
test "$setup_copied" != "yes" && test -d $dir/default && cp -R $dir/default/* $tmp

find_util() {
	if test -x "$ARCHIVE/$1"; then
		echo "$ARCHIVE/$1"
	elif test -x "$GOPATH/bin/$1"; then
		echo "$GOPATH/bin/$1"
	elif test -x "$(dirname $XCLUSTER)/bin/$1"; then
		echo "$(dirname $XCLUSTER)/bin/$1"
	else
		which "$1"
	fi
}

eval $($XCLUSTER env | grep ARCHIVE)
mkdir -p $tmp/bin
for f in k3s coredns mconnect; do
	x=$(find_util $f)
	test -n "$x" || die "Not found [$f]"
	cp $x $tmp/bin
done
$XCLUSTER install_prog --dest=$tmp jq

# Certificates are required for image pull
mkdir -p $tmp/etc/ssl/certs
cp /etc/ssl/certs/ca-certificates.crt $tmp/etc/ssl/certs/

cd $tmp
tar cf "$1" *
cd - > /dev/null
rm -rf $tmp
