#! /bin/sh
##
## ovs_test --
##
##   Test script for ovs executed in xcluster.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
me=$dir/$prg
tmp=/tmp/${prg}_$$
test -n "$PODIF" || export PODIF=hostname

die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
help() {
	grep '^##' $0 | cut -c3-
	rm -rf $tmp
	exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$prg: $*" >&2
}
dbg() {
	test -n "$__verbose" && echo "$prg: $*" >&2
}
cmd_tcase_version() {
	netns_test tcase_version
}
cmd_tcase_create_br0() {
	tcase "Create ovs bridge; br0"
	ovs-vsctl add-br br0
	ip addr flush dev eth1
	ovs-vsctl add-port br0 eth1
	local mynode=$(mynode)
	ip addr add 192.168.1.$mynode/24 dev eth1
	ip -6 addr add 1000::1:192.168.1.$mynode/120 dev eth1
	netns_test assign_bridge_address --random br0
}
cmd_tcase_create_netns() {
	tcase "Create netns"
	netns_test create
}
# This seems like a bug reported and ignored since 2015;
# https://mail.openvswitch.org/pipermail/ovs-discuss/2015-July/038205.html
# We must inject ALL interfaces *first* and *then* rename them.
cmd_tcase_add_ports() {
	tcase "Add OVS internal interfaces in netns's"
	local pod
	for pod in $(netns_test name); do
		#tlog "POD $pod"
		ovs-vsctl add-port br0 $pod -- set Interface $pod type=internal
		ip link set netns $pod $pod || tdie
	done
	local dev=$PODIF
	for pod in $(netns_test name); do
		if test "$PODIF" = "hostname"; then
			dev=$pod
		else
			ip -n $pod link set name $dev dev $pod
		fi
		ip netns exec $pod sysctl -qw net.ipv6.conf.$dev.accept_dad=0
		ip -n $pod link set up dev $dev
	done
	
	netns_test assign_addresses --random || tdie
}
cmd_tcase_ping_all() {
	tcase "Ping all from main netns"
	netns_test ping_all_random || tdie
	local pod=$(netns_test name 1)
	tcase "Ping all from POD [$pod]"
	netns_test exec $pod netns_test ping_all_random
}


. /etc/profile
. /usr/lib/xctest
indent='  '


# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
	if echo $1 | grep -q =; then
		o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
		v=$(echo "$1" | cut -d= -f2-)
		eval "$o=\"$v\""
	else
		o=$(echo "$1" | sed -e 's,-,_,g')
		eval "$o=yes"
	fi
	shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
